apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def keystoreFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreFile.withInputStream { keystoreProperties.load(it) }

def versionFile = file('version.properties')
def versionProperties = new Properties()
versionFile.withInputStream { versionProperties.load(it) }


android {
    compileSdkVersion movieConfigVersions.compileSdk
    buildToolsVersion movieConfigVersions.buildTools

    defaultConfig {
        applicationId "io.github.gustavobarbosab.movies"
        minSdkVersion movieConfigVersions.minSdk
        targetSdkVersion movieConfigVersions.targetSdk
        versionCode versionProperties['VERSION_CODE'].toInteger()
        versionName versionProperties.VERSION_NAME

        testInstrumentationRunner movieConfigVersions.testInstrumentation
    }

    signingConfigs {
        release {
            storeFile rootProject.file(keystoreProperties.storeFile)
            storePassword keystoreProperties.password
            keyAlias keystoreProperties.keyAlias
            keyPassword keystoreProperties.password
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures.dataBinding = true

    dynamicFeatures = [
            ':features:showcase:showcase_private',
            ':features:favorites:favorite_presentation',
            ':features:detail:detail_presentation'
    ]

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(modulesDependencies.core)
    implementation project(modulesDependencies.common)

    // Modules data
    implementation project(modulesDependencies.favoritesData)
    implementation project(modulesDependencies.detailsData)

    implementation kotlinDependencies.values()
    implementation androidxDependencies.values()
    implementation navigationDependencies.values()
    testImplementation unitTestDependencies.values()

    implementation daggerDependencies.dagger
    kapt daggerDependencies.compiler
    kapt daggerDependencies.processor

    implementation networkDependencies.values()

    implementation playCoreDependencies.values()

    implementation platform('com.google.firebase:firebase-bom:28.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
}